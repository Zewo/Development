import PackageDescription

let package = Package(
    name: "Quark",
    targets: [
        Target(name: "Quark", dependencies: ["HTTPServer", "HTTPFile", "Resource", "LogMiddleware"]),

        Target(name: "Base64"),
        Target(name: "BasicAuthMiddleware", dependencies: ["Base64", "HTTP", "String"]),
        Target(name: "ContentNegotiationMiddleware", dependencies: ["HTTP", "Mapper"]),
        Target(name: "File", dependencies: ["Venice", "String", "POSIX"]),
        Target(name: "HTTP", dependencies: ["MediaType", "URI"]),
        Target(name: "HTTPFile", dependencies: ["File", "HTTP"]),
        Target(name: "HTTPParser", dependencies: ["URI"]),
        Target(name: "HTTPSerializer", dependencies: ["URI"]),
        Target(name: "HTTPServer", dependencies: ["TCP", "HTTPParser", "HTTPSerializer"]),
        Target(name: "IP", dependencies: ["Venice"]),
        Target(name: "JSON", dependencies: ["StructuredData"]),
        Target(name: "JSONMediaType", dependencies: ["JSON", "MediaType"]),
        Target(name: "Log"),
        Target(name: "LogMiddleware", dependencies: ["Log", "HTTP"]),
        Target(name: "Mapper", dependencies: ["StructuredData"]),
        Target(name: "MediaType", dependencies: ["StructuredData", "String"]),
        Target(name: "Mustache"),
        Target(name: "PathParameterMiddleware", dependencies: ["HTTP"]),
        Target(name: "POSIX"),
        Target(name: "POSIXRegex", dependencies: ["PathParameterMiddleware"]),
        Target(name: "RecoveryMiddleware"),
        Target(name: "Reflection"),
        Target(name: "RegexRouteMatcher", dependencies: ["PathParameterMiddleware", "POSIXRegex"]),
        Target(name: "Resource", dependencies: ["Sideburns", "URLEncodedFormMediaType", "JSONMediaType", "RecoveryMiddleware", "Router", "ContentNegotiationMiddleware"]),
        Target(name: "Router", dependencies: ["RegexRouteMatcher", "TrieRouteMatcher"]),
        Target(name: "Sideburns", dependencies: ["File", "HTTP", "Mustache"]),
        Target(name: "String"),
        Target(name: "StructuredData", dependencies: ["Reflection"]),
        Target(name: "TCP", dependencies: ["IP"]),
        Target(name: "TrieRouteMatcher", dependencies: ["PathParameterMiddleware"]),
        Target(name: "URI", dependencies: ["String"]),
        Target(name: "URLEncodedForm", dependencies: ["StructuredData", "String"]),
        Target(name: "URLEncodedFormMediaType", dependencies: ["URLEncodedForm", "MediaType"]),
        Target(name: "Venice"),
    ],
    dependencies: [
        .Package(url: "https://github.com/open-swift/S4.git", majorVersion: 0, minor: 10),
        .Package(url: "https://github.com/VeniceX/CLibvenice.git", majorVersion: 0, minor: 5),
        .Package(url: "https://github.com/Zewo/CURIParser.git", majorVersion: 0, minor: 5),
        .Package(url: "https://github.com/Zewo/CHTTPParser.git", majorVersion: 0, minor: 5),
    ]
)
